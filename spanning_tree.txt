int n, m;
    cin >> n >> m;
    priority_queue<pair<int, pair<int, int>>> pq;
    int a, b, c;
    int  minimumCost​= 0;
    initialize();
    for (int i = 0; i < m; ++i)
    {
        cin >> a >> b >> c;
        pq.push({-1 * c, {a, b}});
    }
    while (!pq.empty())
    {
        pair<int, pair<int, int>> x = pq.top();
        pq.pop();
        int px = find(x.second.first);
        int py = find(x.second.second);
        if (px != py)
        {
            minimumCost​ += -1 * x.first;
            unionxy(px, py);
        }
    }
    cout << minimumCost​ << endl;